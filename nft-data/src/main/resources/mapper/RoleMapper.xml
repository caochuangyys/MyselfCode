<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nft.data.mapper.RoleMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.nft.data.entity.RoleDO">
        <result column="id" property="id" />
        <result column="gmt_create" property="gmtCreate" />
        <result column="gmt_update" property="gmtUpdate" />
        <result column="name" property="name" />
        <result column="description" property="description" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        gmt_create,
        gmt_update,
        name,
        description,
    </sql>

    <resultMap id="roleMap" type="com.nft.data.dto.admin.RoleListDTO">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <collection property="menus" ofType="com.nft.data.dto.admin.RoleMenuDTO">
            <id column="menuCode" property="menuCode"/>
            <result column="menuName" property="menuName"/>
            <collection property="permissions" ofType="com.alibaba.fastjson.JSONObject">
                <id column="permissionId" property="permissionId"/>
                <result column="permissionName" property="permissionName"/>
            </collection>
        </collection>
    </resultMap>
    <select id="listRoles" resultMap="roleMap">
        SELECT
        r.id              id,
        r.name            name,
        r.description            `description`,
        p.id              permissionId,
        p.menu_code       menuCode,
        p.menu_name       menuName,
        p.permission_name permissionName
        FROM t_role r
        LEFT JOIN t_role_admin ur ON ur.role_id = r.id
        LEFT JOIN t_role_permission rp ON r.id = rp.role_id
        LEFT JOIN t_permission p ON rp.permission_id = p.id
        ORDER BY r.id desc
    </select>


    <select id="findByAdminId" resultMap="BaseResultMap">
        SELECT
        a.*
        FROM
            t_role a
                LEFT JOIN
            t_role_admin b ON a.id = b.role_id
                LEFT JOIN
            t_admin c ON b.admin_id = c.id
        WHERE
            c.id = #{adminId}
    </select>

    <insert id="insertAdminRoles">
        insert into t_role_admin (admin_id, role_id)
        values
        <foreach collection="roleIds" item="item" index="index" separator=",">
            (#{adminId}, #{item})
        </foreach>
    </insert>

    <delete id="deleteAdminRoles">
        delete from t_role_admin
        where 1=1
        <if test="adminId != null">
            and admin_id = #{adminId}
        </if>
        <if test="roleIds != null and roleIds.size > 0">
            and role_id in
            <foreach collection="roleIds" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </delete>
    <delete id="deleteByAdminIds">
        delete from t_role_admin
        where admin_id in
        <foreach collection="adminIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

</mapper>
