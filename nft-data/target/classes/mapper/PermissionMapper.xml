<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nft.data.mapper.PermissionMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.nft.data.entity.PermissionDO">
        <result column="id" property="id" />
        <result column="gmt_create" property="gmtCreate" />
        <result column="gmt_update" property="gmtUpdate" />
        <result column="menu_code" property="menuCode" />
        <result column="menu_name" property="menuName" />
        <result column="permission_code" property="permissionCode" />
        <result column="permission_name" property="permissionName" />
        <result column="required_permission" property="requiredPermission" />
    </resultMap>


    <resultMap id="permissionMap" type="com.nft.data.dto.admin.PermissionDTO">
        <id column="menuName" property="menuName"/>
        <collection property="permissions" ofType="com.alibaba.fastjson.JSONObject">
            <id column="id" property="id"/>
            <result column="permissionName" property="permissionName"/>
            <result column="requiredPerm" property="requiredPerm" javaType="Integer"/>
        </collection>
    </resultMap>

    <!-- 通用查询结果列 -->
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
    id,
    gmt_create AS gmtCreate,
    gmt_update AS gmtUpdate,
    menu_code AS menuCode, menu_name AS menuName, permission_code AS permissionCode, permission_name AS permissionName, required_permission AS requiredPermission
    </sql>

    <select id="listAllPermission" resultMap="permissionMap">
        SELECT
            p.id                  id,
            p.menu_name           menuName,
            p.permission_name     permissionName,
            p.required_permission requiredPerm
        FROM t_permission p
    </select>


    <insert id="insertRolePermission">
        insert into t_role_permission (role_id, permission_id)
        values
        <foreach collection="permissions" item="item" index="index" separator=",">
            (#{roleId}, #{item})
        </foreach>
    </insert>


    <delete id="deleterRolePermission">
        delete from t_role_permission
        where role_id = #{roleId}
        <if test="permissions != null and permissions.size > 0">
            and permission_id in
            <foreach collection="permissions" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </delete>

    <select id="selectByRoleId" resultMap="BaseResultMap">
        SELECT
            p.*
        FROM
            t_permission p
                LEFT JOIN
            t_role_permission rp ON p.id = rp.permission_id
                LEFT JOIN
            t_role r ON r.id = rp.role_id
        WHERE
            r.id = #{roleId};
    </select>

    <select id="selectByRoleIds" resultType="java.lang.String">
        select
        distinct(p.permission_code)
        from
        t_permission p
        left join
        t_role_permission rp on p.id = rp.permission_id
        left join t_role r on rp.role_id = r.id
        where r.id in
        <foreach collection="roleIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

</mapper>
